plugins {
  id "org.springframework.boot" version "2.6.0"
  id "java"
  id "checkstyle"
}

group 'com.epam.bank'
version '0.0.1'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

dependencies {
  implementation(project(":migration"))
  // Importing BOM
  implementation(platform(project(":bom")))
  implementation 'junit:junit:4.13.1'
  annotationProcessor(platform(project(":bom"))) // importing bom for annotation processors
  testAnnotationProcessor(platform(project(":bom"))) // importing bom for annotation processors
  implementation platform("org.springframework.boot:spring-boot-dependencies")
  implementation 'javax.annotation:javax.annotation-api'

  // From Spring BOM
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  //Security
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'io.jsonwebtoken:jjwt'
  
  // Hibernate
  implementation 'org.hibernate:hibernate-core'
  implementation 'org.hibernate:hibernate-validator'
  implementation 'org.hibernate.validator:hibernate-validator-annotation-processor'
  implementation 'javax.validation:validation-api'
  implementation 'javax.persistence:javax.persistence-api'
  implementation 'org.hibernate:hibernate-validator'
  implementation 'org.hibernate.validator:hibernate-validator-annotation-processor'
  implementation 'commons-validator:commons-validator'

  runtimeOnly 'org.postgresql:postgresql'

  // Other
  compileOnly "org.projectlombok:lombok"
  implementation "org.apache.commons:commons-lang3"
  implementation 'org.liquibase:liquibase-core'
  implementation 'org.postgresql:postgresql'
  implementation 'org.mapstruct:mapstruct'

  // Logging
  implementation 'org.apache.logging.log4j:log4j-api'
  implementation 'org.apache.logging.log4j:log4j-core'
  implementation 'org.slf4j:slf4j-api'

  // Test
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.springframework.security:spring-security-test"
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "org.junit.jupiter:junit-jupiter-engine"
  testImplementation "org.assertj:assertj-core"
  testCompileOnly "org.projectlombok:lombok"
  testImplementation 'org.mapstruct:mapstruct'

  // Integration tests only
  integrationTestImplementation "io.rest-assured:spring-mock-mvc"

  // Annotation processors
  annotationProcessor "org.projectlombok:lombok"
  annotationProcessor 'org.mapstruct:mapstruct-processor'
  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
  testAnnotationProcessor "org.projectlombok:lombok"
  testAnnotationProcessor 'org.mapstruct:mapstruct-processor'
  testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
}

test {
  useJUnitPlatform()
}
